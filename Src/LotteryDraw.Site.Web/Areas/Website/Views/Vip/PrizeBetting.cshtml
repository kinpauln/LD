@{
    ViewBag.Title = "Betting";
    Layout = "~/Areas/Website/Views/Shared/_Layout_Vip.cshtml";
}
@using Webdiyer.WebControls.Mvc
@using LotteryDraw.Component.Tools
@model LotteryDraw.Site.Models.PrizeBettingView

@section  LeftMenuItems{
    @Html.Partial("VipNavPartial")
}

@section  BreadCrumbs{
    &gt;
    <label>领奖信息</label>
}
<h2>@ViewBag.PrizeOrderId</h2>
@using (Html.BeginForm("PrizeBetting", "Vip", FormMethod.Post, new { id = "prizeBettingForm" }))
{
    long curruserid = ViewBag.CurrentUserId;
    @Html.Hidden("CurrentUserId", curruserid)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeOrderView.Id)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.MemberView.Id)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeOrderView.Question)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeOrderView.AnswerOptions)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeView.OriginalPhoto.Name)
    @Html.HiddenFor(model => model.UserAnswer)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeView.Name)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeView.Description)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.MemberView.UserName)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeOrderView.RevealType)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeOrderView.ScopeType)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeOrderView.LaunchTime)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeOrderView.PoolCount)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeOrderView.Question)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeOrderView.AnswerOptions)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeOrderView.AddDate)
    @Html.HiddenFor(model => model.PrizeOrderDetailView.MemberView.Id, new { Id = "hidnMemberIdOfPrize" })
    @Html.HiddenFor(model => model.PrizeOrderDetailView.PrizeOrderView.IsNeedExchangeCode, new { Id = "hidnIsNeedExchangeCode" })
    <table class="message_table">
        <tbody>
            @*@if (ViewBag.IsPostBack != null && (bool)ViewBag.IsPostBack)
            {
                <tr>
                    <td colspan="2" style="text-align: center; color: #f00;">@ViewBag.Message</td>
                </tr>
            }*@

            <tr>
                <td class="text">奖品名称：</td>
                <td class="input">
                    @Model.PrizeOrderDetailView.PrizeView.Name
                </td>
            </tr>
            <tr>
                <td class="text">奖品描述：</td>
                <td class="input">
                    @Model.PrizeOrderDetailView.PrizeView.Description
                </td>
            </tr>
            <tr>
                <td class="text">奖品图片：</td>
                <td class="input">
                    @{
    long userid = Model.PrizeOrderDetailView.MemberView.Id;
    string imgname = Model.PrizeOrderDetailView.PrizeView.OriginalPhoto.Name;
                    }
                    <div style="max-width: 600px; max-height: 600px;">
                        <img src="/Files/PrizePhotos/@userid/@imgname" style="width:100%;height:100%;" onerror="this.onerror=null,this.src=&#39;http://image11.m1905.cn/uploadfile/nopic.gif&#39;" />
                    </div>
                </td>
            </tr>
            <tr>
                <td class="text">抽奖发起者：</td>
                <td class="input">
                    @Model.PrizeOrderDetailView.MemberView.UserName
                </td>
            </tr>
            <tr>
                <td class="text">抽奖类型：</td>
                <td class="input">
                    @Model.PrizeOrderDetailView.PrizeOrderView.RevealType.ToDescription()
                </td>
            </tr>
            @{
    if (Model.PrizeOrderDetailView.PrizeOrderView.RevealType != RevealType.Scene)
    {
        string areaName = Model.PrizeOrderDetailView.PrizeOrderView.ScopeType == ScopeType.AreaCity ? Model.PrizeOrderDetailView.PrizeOrderView.ScopeAreaCity : "全国";
                <tr>
                    <td class="text">抽奖范围：</td>
                    <td class="input">
                        @areaName
                    </td>
                </tr>}
            }
            @{
    if (Model.PrizeOrderDetailView.PrizeOrderView.RevealType == RevealType.Scene
        || Model.PrizeOrderDetailView.PrizeOrderView.RevealType == RevealType.Timing
        || Model.PrizeOrderDetailView.PrizeOrderView.RevealType == RevealType.Answer && Model.PrizeOrderDetailView.PrizeOrderView.AnswerRevealConditionType == AnswerRevealConditionType.Timing)
    {
        string launchString = "未知";
        if (Model.PrizeOrderDetailView.PrizeOrderView.LaunchTime.HasValue)
        {
            launchString = Model.PrizeOrderDetailView.PrizeOrderView.LaunchTime.Value.ToString("yyyy-MM-dd HH:mm:ss");
        }
                <tr>
                    <td class="text">开奖时间：</td>
                    <td class="input">
                        @launchString
                    </td>
                </tr>}
            }
            @{
    if (Model.PrizeOrderDetailView.PrizeOrderView.RevealType == RevealType.Quota
        || Model.PrizeOrderDetailView.PrizeOrderView.AnswerRevealConditionType == AnswerRevealConditionType.Quota)
    {
                <tr>
                    <td class="text">总人数：</td>
                    <td class="input">
                        @Model.PrizeOrderDetailView.PrizeOrderView.PoolCount
                    </td>
                </tr>}
            }
            <tr>
                <td class="text">抽奖发起时间：</td>
                <td class="input">
                    @Model.PrizeOrderDetailView.PrizeOrderView.AddDate
                </td>
            </tr>
            @if (ViewBag.RevealType != null && ViewBag.RevealType == RevealType.Answer.ToInt().ToString())
            {
                <tr>
                    <td class="text">题目：</td>
                    <td class="input">@Model.PrizeOrderDetailView.PrizeOrderView.Question</td>
                </tr>
                <tr>
                    <td class="text">答案选项：</td>
                    <td class="input">
                        @{
                if (!string.IsNullOrEmpty(Model.PrizeOrderDetailView.PrizeOrderView.AnswerOptions))
                {
                    string[] options = Model.PrizeOrderDetailView.PrizeOrderView.AnswerOptions.Split(new string[] { "|||" }, StringSplitOptions.RemoveEmptyEntries);
                    //ViewBag.AnswerOptions = options;
                            <select name="answer" id="slUserAnswer">
                                <option value="">请选择</option>
                                @foreach (string option in options)
                                {
                                    if (string.IsNullOrEmpty(option))
                                    {
                                        continue;
                                    }
                                    string value = option.Split(':')[0];
                                    string text = option.Split(':')[1];
                                    <option value="@value">@text</option>
                                }
                            </select>
                }
                        }
                    </td>
                </tr>
            }
@*<tr>
                <td class="text">领奖电话：</td>
                <td class="input">
                    @Html.TextBoxFor(model => model.PrizeOrderDetailView.MemberView.Tel, new { @class = "input-text", placeholder = "联系电话" })
                    <span class="info">*</span>
                    <br />
                    @Html.ValidationMessageFor(model => model.PrizeOrderDetailView.MemberView.Tel)
                </td>
            </tr>
            <tr>
                <td class="text">奖品邮寄地址：</td>
                <td class="input">
                    @Html.TextAreaFor(model => model.PrizeOrderDetailView.MemberView.Address, new { @class = "textarea-text", cols = "50", rows = "6", placeholder = "奖品邮件地址" })
                    <span class="info">*</span>
                    <br />
                </td>
            </tr>*@
            @if (Model.PrizeOrderDetailView.PrizeOrderView.IsNeedExchangeCode)
            {
                <tr rtype="no-change">
                    <td class="text">兑奖码</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.ExchangeCode, new { @class = "input-text", Id = "ExchangeCode" })
                    </td>
                </tr>
            }
            <tr>
                <td class="text"></td>
                <td class="input">
                    @Html.MvcCaptcha(new MvcCaptchaOptions
               {
                   DelayLoad = false, //若要启用Ajax延迟加载验证码图片功能，则需要设置MvcCaptchaOptions属性的DelayLoad为true
                   ValidationInputBoxId = "captchaInput", //验证码输入文本框的客户端ID
                   CaptchaImageContainerId = "imgContainer" //包含验证码图片的容器元素的客户端ID
               })
                    <span id="imgContainer"></span>
                    <br />
                    <div>请输入上边图片中的文字：</div>
                    <input type="text" class="input-text" name="_mvcCaptchaText" id="captchaInput" data-val="true" data-val-required="验证码不能为空" />
                </td>
            </tr>
            <tr>
                <td class="text"></td>
                <td class="submint">
                    <input type="button" id="btnSubmit" value="确认" class="submit button orange"></td>
            </tr>
        </tbody>
    </table>
}
@section scripts{
    @Html.Partial("PostBackMessage")
    <script src="~/Scripts/jquery.form.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.maskedinput.min.js"></script>
    <script src="~/Scripts/jquery.previewimage.js"></script>
    <script type="text/javascript">
        $(function () {
            jQuery.validator.addMethod("phone", function (value, element) {
                return this.optional(element) || /^(13[0-9]|15[0|3|6|7|8|9]|18[8|9])\d{8}$/.test(value);
            }, "请输入合法的手机号码.");

            $("#prizeBettingForm").submit(function () {
                return true;
                //return false; //此处必须返回false，阻止常规的form提交
            });

            $("#btnSubmit").click(function () {
                if ($("#CurrentUserId").val() == $("#hidnMemberIdOfPrize").val()) {
                    layer.alert("您不能参与自己发起的抽奖。", 8);
                    return;
                }
                var $form = $("#prizeBettingForm");
                @*$("#slUserAnswer").rules("add", {
                    required: function () {
                        var rtype = '@ViewBag.RevealType';
                        if (rtype == "@RevealType.Answer.ToInt().ToString()") {
                            return true;
                        }
                        return false;
                    },
                    messages: {
                        required: "答案必须选择"
                    }
                });*@

                $form.validate();
                if ($form.valid()) {
                    $form.submit();
                }
            });

            $("#prizeBettingForm").validate({
                errorElement: 'span',
                errorClass: 'error-info',
                focusInvalid: false,
                rules: {
                    //Phone: {
                    //    required: true,
                    //    phone: 'required'
                    //},
                    //Address: {
                    //    required: true
                    //}
                    answer: {
                        required: function () {
                            var rtype = '@ViewBag.RevealType';
                            if (rtype == "@RevealType.Answer.ToInt().ToString()") {
                                return true;
                            }
                            return false;
                        }
                    },
                    ExchangeCode:{
                        required: function () {
                            var isNeedExCode = $("#hidnIsNeedExchangeCode").val();
                            var rtype = '@ViewBag.RevealType';
                            if (isNeedExCode.toLowerCase() == "true") {
                                return true;
                            }
                            return false;
                        }
                    },
                    _mvcCaptchaText: {
                        required: true
                    }
                },

                messages: {
                    //Phone: {
                    //    required: "领奖电话不能为空",
                    //    phone: '手机号码不合法'
                    //},
                    //Address: {
                    //    required: "奖品邮寄地址不能为空"
                    //}
                    answer: {
                        required: "答案必须选择"
                    },
                    ExchangeCode: {
                        required: "兑奖码不能为空"
                    },
                    _mvcCaptchaText: {
                        required: "验证码不能为空"
                    }
                },
                invalidHandler: function (event, validator) { //display error alert on form submit   
                    //$('.alert-danger', $('.login-form')).show();
                },
                highlight: function (e) {
                    //$(e).closest('.form-group').removeClass('has-info').addClass('has-error');
                },
                /* 验证通过时的处理 */
                success: function (e) {
                    //$(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                    //$(e).remove();
                },
                /* 错误信息的显示位置 */
                errorPlacement: function (error, element) {
                    //element.parent().append("<br />");
                    error.appendTo(element.parent());
                }
                /*执行ajaxsubmit*/
                @*,submitHandler: function (form) {
                    var rtype = '@ViewBag.RevealType';
                    if (rtype == 3) {
                        var $slanswer = $("select[name='answer']:eq(0)");
                        if ($slanswer != null && $slanswer.val() != "") {
                            form.submit();
                        } else {
                            var $errorinfos = $slanswer.parent().find("span.error-info");
                            if ($errorinfos.length == 0) {
                                $('<br/><span class="error-info">答案必须选择</span>').appendTo($slanswer.parent());
                            } else {
                                $errorinfos.show();
                            }
                        }
                    } else {
                        form.submit();
                    }
                }*@
            });

            $("select[name='answer']").change(function () {
                $("input:hidden[name='UserAnswer']").val($(this).val());
                var $errorinfos = $(this).parent().find("span.error-info");
                if ($(this).val() != "") {
                    if ($errorinfos.length > 0) {
                        var $error = $errorinfos.eq(0);
                        var $br = $error.prev("br");
                        $br.remove();
                        $error.remove();
                    }
                } else {
                    if ($errorinfos.length == 0) {
                        $('<br/><span class="error-info">答案必须选择</span>').appendTo($(this).parent());
                    }
                }
            });
        });
    </script>
}