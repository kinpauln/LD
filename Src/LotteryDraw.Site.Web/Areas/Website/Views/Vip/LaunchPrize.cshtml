@{
    ViewBag.Title = "发起抽奖";
    Layout = "~/Areas/Website/Views/Shared/_Layout_Business.cshtml";
}
@model LotteryDraw.Site.Models.PrizeOrderView

@section  LeftMenuItems{
    @Html.Partial("VipNavPartial")
}

@section  BreadCrumbs{
    &gt;
    <label>发起抽奖</label>
}

@section  styles{
    <style type="text/css">
        body {
            behavior: url("../../../Content/website/css/csshover.htc");
        }

        div.row-container {
        }

        div.formdata {
            display: none;
        }

        input[type=text].num {
            width: 30px;
        }

        /*发起抽奖页面*/
        div.dropdown {
            height: 200px;
            width: 200px;
            overflow-y: scroll;
            border: solid 1px silver;
            padding: 5px;
        }

            div.dropdown .dropdown-item {
                cursor: pointer;
                position: relative;
            }

                div.dropdown .dropdown-item:hover {
                    background: #C6D7EF;
                    color: #000;
                }

            div.dropdown span {
                position: absolute;
                right: 5px;
                display: none;
            }

                div.dropdown span:hover {
                    color: #f00;
                    font-weight: bold;
                }

            div.dropdown .selected {
                background: #C6D7EF;
                color: #000;
            }
    </style>
}

@if (ViewBag.IsPostBack != null && (bool)ViewBag.IsPostBack)
{
    <div class="row-container" style="text-align: center; color: #f00;">@ViewBag.Message</div>
}
<div class="row-container">
    <table class="message_table">
        <tbody>
            <tr>
                <td class="text">开奖类型：</td>
                <td class="input">
                    @*@Html.DropDownList("slLauchType",(SelectList)ViewBag.RevealTypeList)*@
                    <select id="slLauchType">
                        <option value="-1" containerid="welcome-container">请选择</option>
                        <option value="1" containerid="timing-container">定时开奖</option>
                        <option value="2" containerid="quota-container">定员开奖</option>
                        <option value="3" containerid="answer-container">答案开奖</option>
                        <option value="4" containerid="scene-container">实时开奖</option>
                    </select>
                </td>
            </tr>
    </table>
    <div class="clear"></div>
</div>
<div class="row-container tab" id="welcome-container">
    请选择抽奖类型，并设置好必要的抽奖信息。
</div>
<div class="row-container formdata tab" id="timing-container">
    @using (Html.BeginForm("LaunchPrize", "Vip", FormMethod.Post, new { @class = "timing" }))
    {
        <input type="hidden" name="RevealType" />
        @Html.HiddenFor(m => m.RevealTypeNum);
        @Html.HiddenFor(m => m.AnswerRevealConditionTypeNum);
        @Html.HiddenFor(model => model.PrizeId)
        <table class="message_table">
            <tbody>
                <tr>
                    <td class="text">开奖日期：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.LaunchTime, new { @class = "input-text launchtime", id = "txtLaunchTime", @readonly = "readonly" })<span class="info">*</span>
                    </td>
                </tr>
                <tr>
                    <td class="text">中奖最低人数：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.MinLuckyCount, new { @class = "input-text num" })<span class="info">*</span>
                    </td>
                </tr>
                <tr>
                    <td class="text">中奖人数：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.LuckyCount, new { @class = "input-text num" })<span class="info">*</span>
                    </td>
                </tr>
                @*<tr>
                    <td class="text">开奖率：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.LuckyPercent, new { @class = "input-text num" })<span>%</span><span class="info">*</span>
                    </td>
                </tr>*@
                <tr>
                    <td class="text"></td>
                    <td class="submint">
                        @Html.Partial("LaunchPageButtonsPartial")
                    </td>
                </tr>
            </tbody>
        </table>
    }
    <div class="clear"></div>
</div>
<div class="row-container formdata tab" id="quota-container">
    @using (Html.BeginForm("LaunchPrize", "Vip", FormMethod.Post, new { @class = "quota" }))
    {
        <input type="hidden" name="RevealType" />
        @Html.HiddenFor(m => m.RevealTypeNum);
        @Html.HiddenFor(m => m.AnswerRevealConditionTypeNum);
        @Html.HiddenFor(model => model.PrizeId)
        <table class="message_table">
            <tbody>
                <tr>
                    <td class="text">中奖最低人数：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.MinLuckyCount, new { @class = "input-text num" })<span class="info">*</span>
                    </td>
                </tr>
                <tr>
                    <td class="text">中奖人数：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.LuckyCount, new { @class = "input-text num" })<span class="info">*</span>
                    </td>
                </tr>
                <tr>
                    <td class="text">奖池大小：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.PoolCount, new { @class = "input-text num" })<span class="info">*</span>
                    </td>
                </tr>
                @*<tr>
                    <td class="text">开奖率：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.LuckyPercent, new { @class = "input-text num" })<span>%</span>
                    </td>
                </tr>*@
                <tr>
                    <td class="text"></td>
                    <td class="submint">
                        @Html.Partial("LaunchPageButtonsPartial")
                    </td>
                </tr>
            </tbody>
        </table>
    }
    <div class="clear"></div>
</div>
<div class="row-container formdata tab" id="answer-container">
    @using (Html.BeginForm("LaunchPrize", "Vip", FormMethod.Post, new { @class = "answer", enctype = "multipart/form-data" }))
    {
        <input type="hidden" name="RevealType" />
        @Html.HiddenFor(m => m.RevealTypeNum);
        @Html.HiddenFor(m => m.AnswerRevealConditionTypeNum);
        @Html.HiddenFor(m => m.Answer);
        @Html.HiddenFor(m => m.AnswerOptions);
        @Html.HiddenFor(model => model.PrizeId)
        <table class="message_table">
            <tbody>
                <tr>
                    <td class="text">开奖问题：</td>
                    <td class="input">
                        @Html.TextAreaFor(m => m.Question, new { @class = "textarea-text", cols = "50", rows = "3" })<span class="info">*</span>
                    </td>
                </tr>
                <tr>
                    <td class="text">答案选项：</td>
                    <td class="input">
                        <div style="float: left;">
                            @*@Html.TextAreaFor(m => m.Answer, new { @class = "textarea-text", cols = "50", rows = "3" })*@
                            <input type="text" class="input-text" id="txtAnswerOption" />
                            <input type="button" class="" value="&nbsp;>>&nbsp;" id="btnAddAnswerOption" />
                        </div>
                        <div style="float: left;">
                            <div class="dropdown">
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="text">开奖答案：</td>
                    <td class="input">
                        <select id="slAnswer">
                            <option value="">请选择</option>
                        </select><span class="info">*</span><input type="button" class="button orange" value="重置" id="btnResetAnswerOption" />
                    </td>
                </tr>
                <tr>
                    <td class="text">中奖最低人数：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.MinLuckyCount, new { @class = "input-text num" })<span class="info">*</span>
                    </td>
                </tr>
                <tr>
                    <td class="text">中奖人数：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.LuckyCount, new { @class = "input-text num" })<span class="info">*</span>
                    </td>
                </tr>
                <tr>
                    <td class="text">开奖条件：</td>
                    <td class="input">
                        @*@Html.DropDownList("slLauchType",(SelectList)ViewBag.RevealTypeList)*@
                        <select id="slAnswerLauchType">
                            <option value="-1" selected>请选择</option>
                            <option value="1" trid="trLaunchTime">定时</option>
                            <option value="2" trid="trPoolCount">定员</option>
                        </select><span class="info">*</span>
                    </td>
                </tr>
                <tr id="trLaunchTime" class="dynamic-tr" style="display: none;">
                    <td class="text">开奖日期：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.LaunchTime, new { @class = "input-text launchtime", id = "txtLaunchTime", @readonly = "readonly" })<span class="info">*</span>
                    </td>
                </tr>
                <tr id="trPoolCount" class="dynamic-tr" style="display: none;">
                    <td class="text">奖池大小：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.PoolCount, new { @class = "input-text num" })<span class="info">*</span>
                    </td>
                </tr>
                @*<tr>
                    <td class="text">开奖率：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.LuckyPercent, new { @class = "input-text num" })<span>%</span>
                    </td>
                </tr>*@
                <tr>
                    <td class="text"></td>
                    <td>
                        @*@Html.Partial("LaunchPageButtonsPartial")*@
                        <input type="button" value="发起抽奖" class="button orange" id="btnAnswerReveal" />
<input type="button" value="返回" onclick="javascript: history.go(-1);" class="button orange" />
                    </td>
                </tr>
            </tbody>
        </table>
    }
    <div class="clear"></div>
</div>
<div class="row-container formdata tab" id="scene-container">
    @using (Html.BeginForm("LaunchPrize", "Vip", FormMethod.Post, new { @class = "scene" }))
    {
        <input type="hidden" name="RevealType" />
        @Html.HiddenFor(m => m.RevealTypeNum);
        @Html.HiddenFor(m => m.AnswerRevealConditionTypeNum);
        @Html.HiddenFor(model => model.PrizeId)
        <table class="message_table">
            <tbody>
                <tr>
                    <td class="text">中奖最低人数：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.MinLuckyCount, new { @class = "input-text num" })<span class="info">*</span>
                    </td>
                </tr>
                <tr>
                    <td class="text">中奖人数：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.LuckyCount, new { @class = "input-text num" })<span class="info">*</span>
                    </td>
                </tr>
                <tr class="dynamic-tr">
                    <td class="text">奖池大小：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.PoolCount, new { @class = "input-text num" })<span class="info">*</span>
                    </td>
                </tr>
                @*<tr>
                    <td class="text">开奖率：</td>
                    <td class="input">
                        @Html.TextBoxFor(m => m.LuckyPercent, new { @class = "input-text num" })<span>%</span>
                    </td>
                </tr>*@
                <tr>
                    <td class="text"></td>
                    <td class="submint">
                        @Html.Partial("LaunchPageButtonsPartial")
                    </td>
                </tr>
            </tbody>
        </table>
    }
    <div class="clear"></div>
</div>
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.maskedinput.min.js"></script>
    <script src="~/Content/website/js/My97DatePicker/WdatePicker.js"></script>
    <script type="text/javascript">
        $(function () {
            //初始化日期选择控件
            $(".launchtime").focus(function () {
                WdatePicker({ dateFmt: 'yyyy-MM-dd' })
            });

            //var startDate = $("#txtStartDate").val();
            //var endDate = $("#txtEndDate").val();
            //if (dateCompare(startDate, endDate)) {
            //    $("#formSearch").submit();
            //} else {
            //    $.ligerDialog.warn("起始时间必须小于终止时间");
            //}

            $("form[class='timing']").validate({
                errorElement: 'span',
                errorClass: 'error-info',
                focusInvalid: false,
                rules: {
                    MinLuckyCount: {
                        required: true
                    }
                },

                messages: {
                    MinLuckyCount: {
                        required: "中奖最低人数不能为空"
                    }
                },
                invalidHandler: function (event, validator) { //display error alert on form submit   
                    //$('.alert-danger', $('.login-form')).show();
                },
                highlight: function (e) {
                    //$(e).closest('.form-group').removeClass('has-info').addClass('has-error');
                },
                /* 验证通过时的处理 */
                success: function (e) {
                    //$(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                    //$(e).remove();
                },
                /* 错误信息的显示位置 */
                errorPlacement: function (error, element) {
                    //element.parent().append("<br />");
                    error.appendTo(element.parent());
                },
                /*执行ajaxsubmit*/
                submitHandler: function (form) {
                    //form.submit();
                }
            });

            $("form[class='answer']").validate({
                errorElement: 'span',
                errorClass: 'error-info',
                //focusCleanup: true,
                focusInvalid: false,
                //onfocusout: false,//失去焦点时不验证
                //onkeyup: false, //在keyup时不验证
                //debug:true,
                rules: {
                    MinLuckyCount: {
                        digits: true
                    }
                },
                messages: {
                    MinLuckyCount: {
                        digits: "必须输入整数"
                    }
                },
                invalidHandler: function (event, validator) { //display error alert on form submit   
                    //$('.alert-danger', $('.login-form')).show();
                },
                highlight: function (e) {
                    //$(e).closest('.form-group').removeClass('has-info').addClass('has-error');
                },
                /* 验证通过时的处理 */
                success: function (e) {
                    //$(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                    //$(e).remove();
                },
                /* 错误信息的显示位置 */
                errorPlacement: function (error, element) {
                    //element.parent().append("<br />");
                    error.appendTo(element.parent());
                },
                ///*执行ajaxsubmit*/
                //submitHandler: function (form) {
                //}
            });
            $("#btnAnswerReveal").click(function () {
                var $form = $("form[class='answer']");
                $form.validate();
                if ($form.valid()) {
                    var options = "";
                    $("#slAnswer option[class='answer']").each(function () {
                        var value = $(this).val();
                        var text = $(this).html();
                        options += value + ":" + text + "|||";
                    });
                    if (options != "") {
                        options = options.substring(0, options.length - 3);
                    }
                    $("input:hidden[name='AnswerOptions']").val(options);
                    $("input:hidden[name='Answer']").val($("#slAnswer").val());
                    $form.submit();
                }
            });

            $("form[class='answer']").submit(function () {
                return true;
                //return false; //此处必须返回false，阻止常规的form提交
            });

            $("#slLauchType").change(function () {
                $("input:hidden[name='RevealType']").val($(this).val());
                $("input:hidden[name='RevealTypeNum']").val($(this).val());
                var $opobj = $(this).find("option:selected");
                var containerid = $opobj.attr("containerid");
                $("div.tab").hide();
                $("#" + containerid).show();
            });

            $("#slAnswerLauchType").change(function () {
                if ($(this).val() == -1) {
                    $("form[class='answer'] tr.dynamic-tr").hide();
                }
                $("input:hidden[name='AnswerRevealConditionTypeNum']").val($(this).val());
                var $opobj = $(this).find("option:selected");
                var trid = $opobj.attr("trid");
                $("form[class='answer'] tr.dynamic-tr").hide();
                if ($(this).val() != -1) {
                    $("#" + trid).show();
                }
            });

            $("#btnAddAnswerOption").click(function () {
                if ($("#txtAnswerOption").val() == "") {
                    alert("答案不能为空");
                    return;
                }

                //数字转字母
                var opcount = $("#slAnswer option[class='answer']").length;
                var opvalue = String.fromCharCode((opcount) + 65);
                var optionString = "<option class=\"answer\" value=" + opvalue + ">" + $("#txtAnswerOption").val() + "</option>"
                $("#listAnswerOptions").append(optionString)
                $("#slAnswer").append(optionString);
                $('.dropdown').append("<div class=\"dropdown-item\" value=" + opvalue + ">" + opvalue + ":" + $("#txtAnswerOption").val() + "<span>X</span></div>");
                $("#txtAnswerOption").val("");
            });

            $("#btnResetAnswerOption").click(function () {
                $("#slAnswer option[class='answer']").remove();
                $("div.dropdown div.dropdown-item").remove();
            });

            $("#txtAnswerOption").keypress(function (event) {
                var keycode = (event.keyCode ? event.keyCode : event.which);
                if (keycode == '13') {
                    $("#btnAddAnswerOption").trigger("click");
                }
            });

            $("div.dropdown-item").live("hover", function (event) {
                if (event.type == 'mouseenter') {
                    $(this).addClass("selected");
                    $(this).find("span").show();
                } else {
                    $(this).removeClass("selected");
                    $(this).find("span").hide();
                }
            });

            $("div.dropdown-item span").live("click", function () {
                var value = $(this).parent().attr("value");
                $(this).parent().remove();
                $("#slAnswer option[value=" + value + "]").remove();

                $('.dropdown div.dropdown-item').remove();
                var icounter = 0;
                $("#slAnswer option[class='answer']").each(function () {
                    //数字转字母
                    var opvalue = String.fromCharCode((icounter++) + 65);
                    $(this).attr("value", opvalue);
                    var divOPString = "<div class=\"dropdown-item\" value=" + opvalue + ">" + opvalue + ":" + $(this).html() + "<span>X</span></div>";
                    $('.dropdown').append(divOPString);
                });
            });

            //$('.dropdown-item').bind("mousedown", function (event) {
            //    //if (event.button == 0) {  // 鼠标左键
            //    //    if (event.ctrlKey) { //  ctrl
            //    //        $(this).addClass("selected");
            //    //    } else {
            //    //        $(".dropdown-item").removeClass("selected");
            //    //        $(this).addClass("selected");
            //    //    }
            //    //}
            //});
        });

        function dateCompare(startdate, enddate) {
            var arr = startdate.split("-");
            var starttime = new Date(arr[0], arr[1], arr[2]);
            var starttimes = starttime.getTime();

            var arrs = enddate.split("-");
            var lktime = new Date(arrs[0], arrs[1], arrs[2]);
            var lktimes = lktime.getTime();

            if (starttimes >= lktimes) {
                return false;
            }
            else
                return true;
        }
    </script>
}
